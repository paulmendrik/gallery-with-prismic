{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/paul/gallery-prismic/components/ImageSlider.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Row, Col, Carousel } from 'antd';\n\nconst ImageSlider = ({\n  slice\n}) => {\n  const settings = {\n    dots: false,\n    lazyLoad: true,\n    infinite: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    swipeToSlide: true,\n    autoplay: true,\n    pauseOnHover: true,\n    arrows: false,\n    cssEase: \"linear\"\n  };\n  return /*#__PURE__*/_jsxDEV(Carousel, _objectSpread(_objectSpread({}, settings), {}, {\n    children: slice.items.map((item, index) => /*#__PURE__*/_jsxDEV(Image, {\n      item: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this))\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }, this);\n};\n\nconst Image = ({\n  item\n}) => /*#__PURE__*/_jsxDEV(\"img\", {\n  src: item.carousel_image.url\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 5\n}, this);\n\nexport default ImageSlider;","map":{"version":3,"sources":["/Users/paul/gallery-prismic/components/ImageSlider.js"],"names":["React","Row","Col","Carousel","ImageSlider","slice","settings","dots","lazyLoad","infinite","slidesToShow","slidesToScroll","swipeToSlide","autoplay","pauseOnHover","arrows","cssEase","items","map","item","index","Image","carousel_image","url"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,QAAnB,QAAmC,MAAnC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAEhC,QAAMC,QAAQ,GAAG;AACfC,IAAAA,IAAI,EAAE,KADS;AAEfC,IAAAA,QAAQ,EAAE,IAFK;AAGfC,IAAAA,QAAQ,EAAE,IAHK;AAIfC,IAAAA,YAAY,EAAE,CAJC;AAKfC,IAAAA,cAAc,EAAE,CALD;AAMfC,IAAAA,YAAY,EAAE,IANC;AAOfC,IAAAA,QAAQ,EAAE,IAPK;AAQfC,IAAAA,YAAY,EAAE,IARC;AASfC,IAAAA,MAAM,EAAE,KATO;AAUfC,IAAAA,OAAO,EAAE;AAVM,GAAjB;AAaA,sBAEA,QAAC,QAAD,kCAAcV,QAAd;AAAA,cACGD,KAAK,CAACY,KAAN,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,kBACb,QAAC,KAAD;AAAO,MAAA,IAAI,EAAED;AAAb,OAAwBC,KAAxB;AAAA;AAAA;AAAA;AAAA,YADH;AADH;AAAA;AAAA;AAAA;AAAA,UAFA;AAQD,CAvBD;;AAyBE,MAAMC,KAAK,GAAG,CAAC;AAAEF,EAAAA;AAAF,CAAD,kBACZ;AAAK,EAAA,GAAG,EAAEA,IAAI,CAACG,cAAL,CAAoBC;AAA9B;AAAA;AAAA;AAAA;AAAA,QADF;;AAIA,eAAenB,WAAf","sourcesContent":["import React from 'react';\nimport { Row, Col, Carousel } from 'antd';\n\nconst ImageSlider = ({ slice}) => {\n\n  const settings = {\n    dots: false,\n    lazyLoad: true,\n    infinite: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    swipeToSlide: true,\n    autoplay: true,\n    pauseOnHover: true,\n    arrows: false,\n    cssEase: \"linear\"\n  };\n\n  return (\n  \n  <Carousel {...settings}>\n    {slice.items.map((item, index) => (\n        <Image item={item} key={index} />\n    ))}\n    </Carousel>\n  )\n}\n \n  const Image = ({ item }) => (\n    <img src={item.carousel_image.url} />\n  )\n  \n  export default ImageSlider"]},"metadata":{},"sourceType":"module"}