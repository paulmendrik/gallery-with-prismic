{"ast":null,"code":"import { Client } from '../prismic-configuration';\n\nasync function fetchDocs(page = 1, routes = []) {\n  const response = await Client.query('', {\n    pageSize: 100,\n    lang: '*',\n    page\n  });\n  const allRoutes = routes.concat(response.results);\n\n  if (response.results_size + routes.length < response.total_results_size) {\n    return fetchDocs(page + 1, allRoutes);\n  }\n\n  return [...new Set(allRoutes)];\n}\n\n;\n/** Fetches all Prismic documents and filters them (eg. by document type).\n *  In production, you would probably query documents by type instead of filtering them.\n**/\n\nexport const queryRepeatableDocuments = async filter => {\n  const allRoutes = await fetchDocs();\n  return allRoutes.filter(filter);\n};\nexport const homePageQuery = async () => {\n  const allRoutes = await fetchDocs();\n  return allRoutes.filter(doc => doc.type === 'post').slice(0, 5);\n};","map":{"version":3,"sources":["/Users/paul/gallery-prismic/utils/queries.js"],"names":["Client","fetchDocs","page","routes","response","query","pageSize","lang","allRoutes","concat","results","results_size","length","total_results_size","Set","queryRepeatableDocuments","filter","homePageQuery","doc","type","slice"],"mappings":"AAAA,SAASA,MAAT,QAAuB,0BAAvB;;AAEA,eAAeC,SAAf,CAAyBC,IAAI,GAAG,CAAhC,EAAmCC,MAAM,GAAG,EAA5C,EAAgD;AAC9C,QAAMC,QAAQ,GAAG,MAAMJ,MAAM,CAACK,KAAP,CAAa,EAAb,EAAiB;AAAEC,IAAAA,QAAQ,EAAE,GAAZ;AAAiBC,IAAAA,IAAI,EAAE,GAAvB;AAA4BL,IAAAA;AAA5B,GAAjB,CAAvB;AACA,QAAMM,SAAS,GAAGL,MAAM,CAACM,MAAP,CAAcL,QAAQ,CAACM,OAAvB,CAAlB;;AACA,MAAIN,QAAQ,CAACO,YAAT,GAAwBR,MAAM,CAACS,MAA/B,GAAwCR,QAAQ,CAACS,kBAArD,EAAyE;AACvE,WAAOZ,SAAS,CAACC,IAAI,GAAG,CAAR,EAAWM,SAAX,CAAhB;AACD;;AACD,SAAO,CAAC,GAAG,IAAIM,GAAJ,CAAQN,SAAR,CAAJ,CAAP;AACD;;AAAA;AAED;AACA;AACA;;AACA,OAAO,MAAMO,wBAAwB,GAAG,MAAOC,MAAP,IAAkB;AACxD,QAAMR,SAAS,GAAG,MAAMP,SAAS,EAAjC;AACA,SAAOO,SAAS,CAACQ,MAAV,CAAiBA,MAAjB,CAAP;AACD,CAHM;AAKP,OAAO,MAAMC,aAAa,GAAG,YAAY;AACvC,QAAMT,SAAS,GAAG,MAAMP,SAAS,EAAjC;AACA,SAAOO,SAAS,CAACQ,MAAV,CAAiBE,GAAG,IAAIA,GAAG,CAACC,IAAJ,KAAa,MAArC,EAA6CC,KAA7C,CAAmD,CAAnD,EAAsD,CAAtD,CAAP;AACD,CAHM","sourcesContent":["import { Client } from '../prismic-configuration';\n\nasync function fetchDocs(page = 1, routes = []) {\n  const response = await Client.query('', { pageSize: 100, lang: '*', page });\n  const allRoutes = routes.concat(response.results);\n  if (response.results_size + routes.length < response.total_results_size) {\n    return fetchDocs(page + 1, allRoutes);\n  }\n  return [...new Set(allRoutes)];\n};\n\n/** Fetches all Prismic documents and filters them (eg. by document type).\n *  In production, you would probably query documents by type instead of filtering them.\n**/\nexport const queryRepeatableDocuments = async (filter) => {\n  const allRoutes = await fetchDocs()\n  return allRoutes.filter(filter)\n}\n\nexport const homePageQuery = async () => {\n  const allRoutes = await fetchDocs()\n  return allRoutes.filter(doc => doc.type === 'post').slice(0, 5)\n}"]},"metadata":{},"sourceType":"module"}