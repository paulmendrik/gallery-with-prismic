{"ast":null,"code":"import Prismic from \"prismic-javascript\";\nexport var apiEndpoint = 'https://lightfoot.cdn.prismic.io/api/v2';\nexport var accessToken = process.env.PRISMIC_TOKEN;\nexport var client = Prismic.client(apiEndpoint, {\n  accessToken: accessToken\n});\nexport var Client = function Client() {\n  var req = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  return Prismic.client(apiEndpoint, createClientOptions(req, accessToken));\n};\n_c = Client;\nexport var linkResolver = function linkResolver(doc) {\n  if (doc.type === 'press') {\n    return \"/press/\".concat(doc.uid);\n  }\n\n  return '/';\n};\nexport var hrefResolver = function hrefResolver(doc) {\n  if (doc.type === 'press') {\n    return \"/press/\".concat(doc.uid);\n  }\n\n  return '/';\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Client\");","map":{"version":3,"sources":["/Users/paul/gallery-prismic/prismic-configuration.js"],"names":["Prismic","apiEndpoint","accessToken","process","env","PRISMIC_TOKEN","client","Client","req","createClientOptions","linkResolver","doc","type","uid","hrefResolver"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,oBAApB;AACA,OAAO,IAAMC,WAAW,GAAG,yCAApB;AACP,OAAO,IAAMC,WAAW,GAAGC,OAAO,CAACC,GAAR,CAAYC,aAAhC;AACP,OAAO,IAAMC,MAAM,GAAGN,OAAO,CAACM,MAAR,CAAeL,WAAf,EAA4B;AAAEC,EAAAA,WAAW,EAAXA;AAAF,CAA5B,CAAf;AAEP,OAAO,IAAMK,MAAM,GAAG,SAATA,MAAS;AAAA,MAACC,GAAD,uEAAO,IAAP;AAAA,SACpBR,OAAO,CAACM,MAAR,CAAeL,WAAf,EAA4BQ,mBAAmB,CAACD,GAAD,EAAMN,WAAN,CAA/C,CADoB;AAAA,CAAf;KAAMK,M;AAIb,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAS;AAEnC,MAAIA,GAAG,CAACC,IAAJ,KAAa,OAAjB,EAA0B;AACxB,4BAAiBD,GAAG,CAACE,GAArB;AACD;;AACH,SAAO,GAAP;AAEC,CAPM;AASP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACH,GAAD,EAAS;AAEnC,MAAIA,GAAG,CAACC,IAAJ,KAAa,OAAjB,EAA0B;AACxB,4BAAiBD,GAAG,CAACE,GAArB;AACD;;AAED,SAAO,GAAP;AACD,CAPM","sourcesContent":["import Prismic from \"prismic-javascript\";\nexport const apiEndpoint = 'https://lightfoot.cdn.prismic.io/api/v2'\nexport const accessToken = process.env.PRISMIC_TOKEN;\nexport const client = Prismic.client(apiEndpoint, { accessToken });\n\nexport const Client = (req = null) => (\n  Prismic.client(apiEndpoint, createClientOptions(req, accessToken))\n)\n\nexport const linkResolver = (doc) => {\n\n  if (doc.type === 'press') {\n    return `/press/${doc.uid}`\n  }\nreturn '/'\n\n}\n\nexport const hrefResolver = (doc) => {\n\n  if (doc.type === 'press') {\n    return `/press/${doc.uid}`\n  }\n\n  return '/'\n}"]},"metadata":{},"sourceType":"module"}